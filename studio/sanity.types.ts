/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type SanityImagePaletteSwatch = {
  _type: 'sanity.imagePaletteSwatch'
  background?: string
  foreground?: string
  population?: number
  title?: string
}

export type SanityImagePalette = {
  _type: 'sanity.imagePalette'
  darkMuted?: SanityImagePaletteSwatch
  lightVibrant?: SanityImagePaletteSwatch
  darkVibrant?: SanityImagePaletteSwatch
  vibrant?: SanityImagePaletteSwatch
  dominant?: SanityImagePaletteSwatch
  lightMuted?: SanityImagePaletteSwatch
  muted?: SanityImagePaletteSwatch
}

export type SanityImageDimensions = {
  _type: 'sanity.imageDimensions'
  height?: number
  width?: number
  aspectRatio?: number
}

export type Geopoint = {
  _type: 'geopoint'
  lat?: number
  lng?: number
  alt?: number
}

export type BigImage = {
  _type: 'bigImage'
  backgroundColor?: SimplerColor
  title?: string
  image?: Media
}

export type Testimonials = {
  _type: 'testimonials'
  backgroundColor?: SimplerColor
  testimonials?: Array<{
    content?: RichText
    person?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'person'
    }
    _type: 'testimonial'
    _key: string
  }>
}

export type MainHero = {
  _type: 'mainHero'
  backgroundColor?: SimplerColor
  title?: RichText
  description?: RichText
  type?: 'image' | 'video'
  image?: Media
  videoId?: string
  buttons?: Array<{
    type?: 'outline' | 'fill'
    link?: LabeledLink
    _type: 'buttons'
    _key: string
  }>
}

export type Sections = Array<
  | ({
      _key: string
    } & SectionRichText)
  | ({
      _key: string
    } & MainHero)
  | ({
      _key: string
    } & Testimonials)
  | ({
      _key: string
    } & BigImage)
  | ({
      _key: string
    } & Newsletter)
  | ({
      _key: string
    } & ListOfArticles)
>

export type Redirects = {
  _id: string
  _type: 'redirects'
  _createdAt: string
  _updatedAt: string
  _rev: string
  redirects?: Array<{
    sourceSlug?: Slug
    resource?:
      | {
          _ref: string
          _type: 'reference'
          _weak?: boolean
          [internalGroqTypeReferenceTo]?: 'page'
        }
      | {
          _ref: string
          _type: 'reference'
          _weak?: boolean
          [internalGroqTypeReferenceTo]?: 'article'
        }
    _type: 'redirect'
    _key: string
  }>
  globalSetting?: boolean
  published?: string
}

export type SeoSettings = {
  _type: 'seoSettings'
  title?: string
  description?: string
  ogTitle?: string
  ogDescription?: string
  ogImage?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    media?: unknown
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    _type: 'image'
  }
  ogUrl?: string
}

export type ArticlesSettings = {
  _id: string
  _type: 'articlesSettings'
  _createdAt: string
  _updatedAt: string
  _rev: string
  listOfArticles?: ListOfArticles
  newsletter?: Newsletter
  globalSetting?: boolean
  published?: string
}

export type Navbar = {
  _id: string
  _type: 'navbar'
  _createdAt: string
  _updatedAt: string
  _rev: string
  logo?: SimpleImage
  menuItems?: Array<
    {
      _key: string
    } & LabeledLink
  >
  globalSetting?: boolean
  published?: string
}

export type MenuItem = Array<{
  hasSubmenu?: boolean
  title?: string
  link?: LabeledLink
  submenu?: Array<{
    link?: LabeledLink
    _key: string
  }>
  _key: string
}>

export type Header = {
  _id: string
  _type: 'header'
  _createdAt: string
  _updatedAt: string
  _rev: string
  menuItems?: MenuItem
  buttons?: Array<{
    type?: 'outline' | 'fill'
    link?: LabeledLink
    _type: 'buttons'
    _key: string
  }>
  logo?: SimpleImage
  globalSetting?: boolean
  published?: string
}

export type SocialMedia = {
  _id: string
  _type: 'socialMedia'
  _createdAt: string
  _updatedAt: string
  _rev: string
  name?: string
  image?: SimpleImage
  socialsUrl?: string
  globalSetting?: boolean
  published?: string
}

export type FooterMenuItem = Array<{
  title?: string
  submenu?: Array<{
    type?: 'link' | 'textContent'
    link?: LabeledLink
    textContent?: SimpleRichText
    _key: string
  }>
  _key: string
}>

export type Footer = {
  _id: string
  _type: 'footer'
  _createdAt: string
  _updatedAt: string
  _rev: string
  footerMenuItems?: FooterMenuItem
  logo?: SimpleImage
  references?: Array<{
    link?: LabeledLink
    _key: string
  }>
  socials?: Array<{
    _ref: string
    _type: 'reference'
    _weak?: boolean
    _key: string
    [internalGroqTypeReferenceTo]?: 'socialMedia'
  }>
  globalSetting?: boolean
  published?: string
}

export type HubspotForm = {
  _type: 'hubspotForm'
  formId?: string
}

export type Video = {
  _type: 'video'
  videoType?: 'youtube' | 'hubspot'
  videoId?: string
  videoUrl?: string
}

export type SectionRichText = {
  _type: 'sectionRichText'
  richText?: Array<
    | {
        children?: Array<{
          marks?: Array<string>
          text?: string
          _type: 'span'
          _key: string
        }>
        style?:
          | 'normal'
          | 'h1'
          | 'h2'
          | 'h3'
          | 'h4'
          | 'paragraph'
          | 'lead'
          | 'large'
          | 'small'
          | 'blockquote'
        listItem?: 'bullet' | 'number'
        markDefs?: Array<
          | ({
              _key: string
            } & SimplerColor)
          | ({
              _key: string
            } & Link)
        >
        level?: number
        _type: 'block'
        _key: string
      }
    | ({
        _key: string
      } & SimpleImage)
    | ({
        _key: string
      } & Table)
    | ({
        _key: string
      } & Video)
    | ({
        _key: string
      } & HubspotForm)
  >
  isNarrow?: boolean
  withSpacing?: boolean
  backgroundColor?: SimplerColor
}

export type SimpleRichText = {
  _type: 'simpleRichText'
  richText?: Array<{
    children?: Array<{
      marks?: Array<string>
      text?: string
      _type: 'span'
      _key: string
    }>
    style?: 'normal' | 'paragraph' | 'lead' | 'large' | 'small'
    listItem?: 'bullet' | 'number'
    markDefs?: Array<
      | ({
          _key: string
        } & SimplerColor)
      | ({
          _key: string
        } & Link)
    >
    level?: number
    _type: 'block'
    _key: string
  }>
}

export type Link = {
  _type: 'link'
  type?: 'internalLink' | 'externalUrl' | 'mediaLink' | 'sectionLink'
  resource?:
    | {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'page'
      }
    | {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'article'
      }
  url?: string
  media?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.fileAsset'
    }
    media?: unknown
    _type: 'mediaLink'
  }
  downloadType?: 'download' | 'openInNewTab'
  section?: SectionLink
}

export type SectionLink = {
  _type: 'sectionLink'
  page?:
    | {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'page'
      }
    | {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'article'
      }
  sectionKey?: string
}

export type MediaLink = {
  _type: 'mediaLink'
  asset?: {
    _ref: string
    _type: 'reference'
    _weak?: boolean
    [internalGroqTypeReferenceTo]?: 'sanity.fileAsset'
  }
  media?: unknown
}

export type SanityFileAsset = {
  _id: string
  _type: 'sanity.fileAsset'
  _createdAt: string
  _updatedAt: string
  _rev: string
  originalFilename?: string
  label?: string
  title?: string
  description?: string
  altText?: string
  sha1hash?: string
  extension?: string
  mimeType?: string
  size?: number
  assetId?: string
  uploadId?: string
  path?: string
  url?: string
  source?: SanityAssetSourceData
}

export type InternalLink =
  | {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'page'
    }
  | {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'article'
    }

export type ExternalUrl = string

export type Article = {
  _id: string
  _type: 'article'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title?: string
  slug?: Slug
  coverImage?: Media
  content?: ArticleRichText
  sections?: Sections
  withListOfArticles?: boolean
  listOfArticles?: ListOfArticles
  withCta?: boolean
  withNewsletter?: boolean
  newsletter?: Newsletter
  date?: string
  author?: {
    _ref: string
    _type: 'reference'
    _weak?: boolean
    [internalGroqTypeReferenceTo]?: 'author'
  }
  category?: {
    _ref: string
    _type: 'reference'
    _weak?: boolean
    [internalGroqTypeReferenceTo]?: 'articleCategory'
  }
  seo?: Seo
}

export type Newsletter = {
  _type: 'newsletter'
  backgroundColor?: SimplerColor
  content?: RichText
  formId?: string
}

export type ListOfArticles = {
  _type: 'listOfArticles'
  backgroundColor?: SimplerColor
  title?: string
  type?: 'recent' | 'custom' | 'all'
  allArticlesButton?: LabeledLink
  customArticles?: Array<{
    _ref: string
    _type: 'reference'
    _weak?: boolean
    _key: string
    [internalGroqTypeReferenceTo]?: 'article'
  }>
}

export type ArticleRichText = {
  _type: 'articleRichText'
  richText?: Array<
    | {
        children?: Array<{
          marks?: Array<string>
          text?: string
          _type: 'span'
          _key: string
        }>
        style?:
          | 'normal'
          | 'h1'
          | 'h2'
          | 'h3'
          | 'h4'
          | 'paragraph'
          | 'lead'
          | 'large'
          | 'small'
          | 'blockquote'
        listItem?: 'bullet' | 'number'
        markDefs?: Array<
          | ({
              _key: string
            } & SimplerColor)
          | ({
              _key: string
            } & Link)
        >
        level?: number
        _type: 'block'
        _key: string
      }
    | ({
        _key: string
      } & SimpleImage)
    | ({
        _key: string
      } & Table)
    | ({
        _key: string
      } & Video)
    | ({
        _key: string
      } & HubspotForm)
  >
}

export type Media = {
  _type: 'media'
  mobileImage?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    media?: unknown
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    _type: 'image'
  }
  desktopImage?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    media?: unknown
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    _type: 'image'
  }
  altText?: string
}

export type Author = {
  _id: string
  _type: 'author'
  _createdAt: string
  _updatedAt: string
  _rev: string
  name?: string
  picture?: SimpleImage
  bio?: ParagraphWithDecoratorsRichText
  withButton?: boolean
  button?: LabeledLink
}

export type ParagraphWithDecoratorsRichText = {
  _type: 'paragraphWithDecoratorsRichText'
  richText?: Array<{
    children?: Array<{
      marks?: Array<string>
      text?: string
      _type: 'span'
      _key: string
    }>
    style?: 'normal'
    listItem?: 'bullet' | 'number'
    markDefs?: Array<
      | ({
          _key: string
        } & SimplerColor)
      | ({
          _key: string
        } & Link)
    >
    level?: number
    _type: 'block'
    _key: string
  }>
}

export type ArticleCategory = {
  _id: string
  _type: 'articleCategory'
  _createdAt: string
  _updatedAt: string
  _rev: string
  categoryName?: string
}

export type Advisor = {
  _id: string
  _type: 'advisor'
  _createdAt: string
  _updatedAt: string
  _rev: string
  firstName?: string
  lastName?: string
  picture?: SimpleImage
  position?: string
  languages?: string
  bio?: RichText
  button?: {
    text?: string
    calendlyUrl?: string
  }
}

export type Page = {
  _id: string
  _type: 'page'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title?: string
  slug?: Slug
  sections?: Sections
  seo?: Seo
}

export type Seo = {
  _type: 'seo'
  title?: string
  description?: string
  noIndex?: boolean
  ogTitle?: string
  ogDescription?: string
  ogImage?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    media?: unknown
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    _type: 'image'
  }
  ogUrl?: string
  canonicalUrl?: string
}

export type Person = {
  _id: string
  _type: 'person'
  _createdAt: string
  _updatedAt: string
  _rev: string
  firstName?: string
  lastName?: string
  picture?: SimpleImage
  position?: string
}

export type SimpleImage = {
  _type: 'simpleImage'
  image?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    media?: unknown
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    _type: 'image'
  }
  alt?: string
  caption?: string
}

export type RichText = {
  _type: 'richText'
  richText?: Array<
    | {
        children?: Array<{
          marks?: Array<string>
          text?: string
          _type: 'span'
          _key: string
        }>
        style?:
          | 'normal'
          | 'h1'
          | 'h2'
          | 'h2alt'
          | 'h3'
          | 'h4'
          | 'responsiveParagraph'
          | 'paragraph'
          | 'lead'
          | 'large'
          | 'small'
          | 'blockquote'
        listItem?: 'bullet' | 'number'
        markDefs?: Array<
          | ({
              _key: string
            } & SimplerColor)
          | ({
              _key: string
            } & Link)
        >
        level?: number
        _type: 'block'
        _key: string
      }
    | ({
        _key: string
      } & SimpleImage)
    | ({
        _key: string
      } & Table)
    | ({
        _key: string
      } & Video)
    | ({
        _key: string
      } & HubspotForm)
  >
}

export type LabeledLink = {
  _type: 'labeledLink'
  label?: string
  type?: 'internalLink' | 'externalUrl' | 'mediaLink' | 'sectionLink'
  resource?: InternalLink
  url?: ExternalUrl
  media?: MediaLink
  downloadType?: 'download' | 'openInNewTab'
  section?: SectionLink
}

export type SanityImageCrop = {
  _type: 'sanity.imageCrop'
  top?: number
  bottom?: number
  left?: number
  right?: number
}

export type SanityImageHotspot = {
  _type: 'sanity.imageHotspot'
  x?: number
  y?: number
  height?: number
  width?: number
}

export type SanityImageAsset = {
  _id: string
  _type: 'sanity.imageAsset'
  _createdAt: string
  _updatedAt: string
  _rev: string
  originalFilename?: string
  label?: string
  title?: string
  description?: string
  altText?: string
  sha1hash?: string
  extension?: string
  mimeType?: string
  size?: number
  assetId?: string
  uploadId?: string
  path?: string
  url?: string
  metadata?: SanityImageMetadata
  source?: SanityAssetSourceData
}

export type SanityAssetSourceData = {
  _type: 'sanity.assetSourceData'
  name?: string
  id?: string
  url?: string
}

export type SanityImageMetadata = {
  _type: 'sanity.imageMetadata'
  location?: Geopoint
  dimensions?: SanityImageDimensions
  palette?: SanityImagePalette
  lqip?: string
  blurHash?: string
  hasAlpha?: boolean
  isOpaque?: boolean
}

export type Table = {
  _type: 'table'
  rows?: Array<
    {
      _key: string
    } & TableRow
  >
}

export type TableRow = {
  _type: 'tableRow'
  cells?: Array<string>
}

export type HighlightColor = {
  _type: 'highlightColor'
  label?: string
  value?: string
}

export type TextColor = {
  _type: 'textColor'
  label?: string
  value?: string
}

export type SimplerColor = {
  _type: 'simplerColor'
  label?: string
  value?: string
}

export type MediaTag = {
  _id: string
  _type: 'media.tag'
  _createdAt: string
  _updatedAt: string
  _rev: string
  name?: Slug
}

export type Slug = {
  _type: 'slug'
  current?: string
  source?: string
}

export type SanityAssistInstructionTask = {
  _type: 'sanity.assist.instructionTask'
  path?: string
  instructionKey?: string
  started?: string
  updated?: string
  info?: string
}

export type SanityAssistTaskStatus = {
  _type: 'sanity.assist.task.status'
  tasks?: Array<
    {
      _key: string
    } & SanityAssistInstructionTask
  >
}

export type SanityAssistSchemaTypeAnnotations = {
  _type: 'sanity.assist.schemaType.annotations'
  title?: string
  fields?: Array<
    {
      _key: string
    } & SanityAssistSchemaTypeField
  >
}

export type SanityAssistOutputType = {
  _type: 'sanity.assist.output.type'
  type?: string
}

export type SanityAssistOutputField = {
  _type: 'sanity.assist.output.field'
  path?: string
}

export type SanityAssistInstructionContext = {
  _type: 'sanity.assist.instruction.context'
  reference?: {
    _ref: string
    _type: 'reference'
    _weak?: boolean
    [internalGroqTypeReferenceTo]?: 'assist.instruction.context'
  }
}

export type AssistInstructionContext = {
  _id: string
  _type: 'assist.instruction.context'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title?: string
  context?: Array<{
    children?: Array<{
      marks?: Array<string>
      text?: string
      _type: 'span'
      _key: string
    }>
    style?: 'normal'
    listItem?: never
    markDefs?: null
    level?: number
    _type: 'block'
    _key: string
  }>
}

export type SanityAssistInstructionUserInput = {
  _type: 'sanity.assist.instruction.userInput'
  message?: string
  description?: string
}

export type SanityAssistInstructionPrompt = Array<{
  children?: Array<
    | {
        marks?: Array<string>
        text?: string
        _type: 'span'
        _key: string
      }
    | ({
        _key: string
      } & SanityAssistInstructionFieldRef)
    | ({
        _key: string
      } & SanityAssistInstructionContext)
    | ({
        _key: string
      } & SanityAssistInstructionUserInput)
  >
  style?: 'normal'
  listItem?: never
  markDefs?: null
  level?: number
  _type: 'block'
  _key: string
}>

export type SanityAssistInstructionFieldRef = {
  _type: 'sanity.assist.instruction.fieldRef'
  path?: string
}

export type SanityAssistInstruction = {
  _type: 'sanity.assist.instruction'
  prompt?: SanityAssistInstructionPrompt
  icon?: string
  title?: string
  userId?: string
  createdById?: string
  output?: Array<
    | ({
        _key: string
      } & SanityAssistOutputField)
    | ({
        _key: string
      } & SanityAssistOutputType)
  >
}

export type SanityAssistSchemaTypeField = {
  _type: 'sanity.assist.schemaType.field'
  path?: string
  instructions?: Array<
    {
      _key: string
    } & SanityAssistInstruction
  >
}

export type AllSanitySchemaTypes =
  | SanityImagePaletteSwatch
  | SanityImagePalette
  | SanityImageDimensions
  | Geopoint
  | BigImage
  | Testimonials
  | MainHero
  | Sections
  | Redirects
  | SeoSettings
  | ArticlesSettings
  | Navbar
  | MenuItem
  | Header
  | SocialMedia
  | FooterMenuItem
  | Footer
  | HubspotForm
  | Video
  | SectionRichText
  | SimpleRichText
  | Link
  | SectionLink
  | MediaLink
  | SanityFileAsset
  | InternalLink
  | ExternalUrl
  | Article
  | Newsletter
  | ListOfArticles
  | ArticleRichText
  | Media
  | Author
  | ParagraphWithDecoratorsRichText
  | ArticleCategory
  | Advisor
  | Page
  | Seo
  | Person
  | SimpleImage
  | RichText
  | LabeledLink
  | SanityImageCrop
  | SanityImageHotspot
  | SanityImageAsset
  | SanityAssetSourceData
  | SanityImageMetadata
  | Table
  | TableRow
  | HighlightColor
  | TextColor
  | SimplerColor
  | MediaTag
  | Slug
  | SanityAssistInstructionTask
  | SanityAssistTaskStatus
  | SanityAssistSchemaTypeAnnotations
  | SanityAssistOutputType
  | SanityAssistOutputField
  | SanityAssistInstructionContext
  | AssistInstructionContext
  | SanityAssistInstructionUserInput
  | SanityAssistInstructionPrompt
  | SanityAssistInstructionFieldRef
  | SanityAssistInstruction
  | SanityAssistSchemaTypeField
export declare const internalGroqTypeReferenceTo: unique symbol
